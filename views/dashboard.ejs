<!DOCTYPE html>
<html>
  <head>
    <title>Learning Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1"></script>

<!-- Font Awesome -->
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
  rel="stylesheet"
/>
<!-- Google Fonts -->
<link
  href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
  rel="stylesheet"
/>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Passion+One&display=swap" rel="stylesheet">

<!-- MDB -->
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.0/mdb.min.css"
  rel="stylesheet"
/>
  </head>
  
  <body style="background-color:orange; overflow-y: auto; padding: 20px;">
    <style>
     .card {
     
      display: flex;
        flex-direction: column;
        height: 100%;
     }

    .row {
      --mdb-gutter-x: 20px;
      --mdb-gutter-y: 0;
      margin-top: calc(var(--mdb-gutter-y)*-1);
      margin-right: calc(var(--mdb-gutter-x)*-0.5);
      margin-left: calc(var(--mdb-gutter-x)*-0.5);
    }

    .margin-top-10 {
        margin-top: 20px;
     }


      .equal-height {
  display: flex;
}

.equal-height .card {
  display: flex;
}

.equal-height .card-body {
  flex: 1;

}

.text-align-center {
  text-align:center;

}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Passion One', cursive;
}
    </style>


<div class="col-md-8">
        <div class="row">
          <h1 style="color:white;">Learning Dashboard</h1>
          </div>
          </div>
          <div class="card" style="background-image:url('../img/passport2.png'); background-color: rgba(0, 0, 0, 0.3); ">
            <div class="card-body">
              <h5 class="chart-title"><i class="fas fa-plane fa-xs"></i>&nbsp;Your passport stamps</h5>
              <div class="row">
                <div class="progress" style="height: 20px; padding-left: 0 !important; border-radius:30px; background-color:#eefbfb;" >
                  <div id="progress-bar" class="progress-bar" role="progressbar" style="background-color: orange; padding-left: 0 !important; width: <%=data.answeredPercentage%>%;" aria-valuemin="0" aria-valuemax="100">
                  <i class="fas fa-plane fa-xs" id="progress-icon" style="position: absolute; font-size: 20px; margin-left: -35px; color:rgb(212, 137, 0); font-size:30px; left: <%=data.answeredPercentage%>%;" ></i> 
                  <%=data.answeredPercentage %>  </div> 
                </div>
                <div class="col-md-4 d-flex flex-column align-items-center " id="image1">
                  <div class="text-align-center">
                  <img id="image1" src="../img/stamp_travel_novice.png" style="width:150px;">
                  <h4>Travel Novice</h4>
                  <p>You encountered > 20% of questions and are starting to get to know a country!</p>
                  <p style="color: lightslategrey; font-size:14px;">{44%} of learners have this stamp in their passport as well.</p>
                  <div class="btn btn-outline-success" id="novice_unlocked">NEW</div> 
                  <div  class="btn btn-outline-secondary" id="novice">TO BE UNLOCKED</div>
                </div>
              </div>
          
                <div class="col-md-4 d-flex flex-column align-items-center" id="image2">
                  <div class="text-align-center">
                  <img src="../img/stamp_adventurer.png" style="width:150px;" >
                  <h4>Adventurer</h4>
                  <p>You explored 50% of questions and have lots of knowledge about Germany!</p>
                  <p style="color: lightslategrey; font-size:14px;">{14%} of learners have this stamp in their passport as well.</p>
                  <div class="btn btn-outline-success" id="adventurer_unlocked">NEW</div> 
                  <div  class="btn btn-outline-secondary" id="adventurer">TO BE UNLOCKED</div>

                </div>
                </div>
          
                <div class="col-md-4 d-flex flex-column align-items-center" id="image3">
                  <div class="text-align-center">
                  <img src="../img/stamp_globetrotter.png" style="width:150px;">
                  <h4>Globetrotter</h4>
                  <p>You are a real expert on that country. What about visiting other countries as well?</p>
                  <p style="color: lightslategrey; font-size:14px;">{1.2%} of learners have this stamp in their passport as well.</p>
                  <div  class="btn btn-outline-secondary" id="globetrotter">TO BE UNLOCKED</div>
                  <div class="btn btn-outline-success" id="globetrotter_unlocked">NEW</div> 
                </div>
              </div>
              </div>
            </div>
          </div>
          
  <div class="margin-top-10">
    <div class="row gap-10">
      <div class="col-md-6">
        <div class="card">
        <div class="card-body">
          <div class="chart-container">
            <h5 class="chart-title">Progress in your first week</h5>
            <canvas id="gameChart"></canvas>
          </div>
          <h6 style="padding-top:5%">Congratulations, you managed a <%=data.streak%>-day streak!</h6>
             <p style="color: lightslategrey; font-size:14px;">{45%} of learners have achieved a <%=data.streak%>-day streak as well.</p>
        </div>
      </div>
    </div>
      <div class="col-md-6">
        <div class="card">
        <div class="card-body">
          <h5 class="card-title">Overall player ranking</h5>
          <table class="table">
            <thead>
              <tr>
                <th scope="col">Rank</th>
                <th scope="col" >Name</th>
                <th scope="col">Overall Score</th>
              </tr>
            </thead>
            <tbody>
              <% const sortedUsers = data.usersList.sort((a, b) => b.score - a.score); %>
              <% const topUsers = sortedUsers.slice(0, 5); %>
              <% topUsers.forEach((user, index) => { %>
                <tr>
                  <th scope="row"><%= index + 1 %></th>
                  <td><%= user.username %></td>
                  <td><%= user.score %></td>
                </tr>
              <% }); %>
              
            </tbody>
          </table>
        </div>
    </div>
  </div>
</div>


<div class="row equal-height margin-top-10">
  <div class="col-md-8">
    <div class="card">
      <div class="card-body">
        <div class="row equal-height">
                    <div class="col-md-6">
                          <h5 class="card-title">Your competencies by categories</h5>
                        
                          <div class="chart-container">
                            <canvas id="skillsChartIndividual"></canvas>
                          </div>
                    </div>


                  <div class="col-md-6">
                        <h5 class="card-title">Average competencies by categories</h5>
                        <div class="chart-container">
                          <canvas id="skillsChart"></canvas>
                        </div>
                      </div>
              </div>
            </div>
          </div>
  </div>
          
  <div class="col-md-4">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">Tasks by correctness</h5>
        <div class="chart-container">
          <canvas id="userChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="margin-top-10">
<div class="col-md-12">
<div class="card">
  <div class="card-body">
    <div class="row">
      <h5>Remember, learning doesn't end here</h5>
        <p>
By exploring the rich history, vocabulary, and cultural nuances of Germany, you've already taken a significant step towards expanding your understanding. Using our personalized recommendation tool helps you reinforce what you've learned and dives into more detailed aspects.
        </p>
      </div>
      <button type="button" class="btn btn-info" href="#feedback">See personalized recommendations</button>
      </div>
      </div>
      </div>
    </div>
    <script>


var historyCountByDate = JSON.parse('<%- JSON.stringify(data.historyCountByDate) %>');

var gameLabels = [];
var gameScores = [];

for (var i = 6; i >= 0; i--) {
  var currentDate = new Date();
  currentDate.setDate(currentDate.getDate() - i);
  var month = currentDate.toLocaleString('default', { month: 'long' });
  var day = currentDate.getDate();
  var label = month + ", " + day;
  gameLabels.push(label);

  var dateKey = currentDate.toDateString();
console.log(currentDate);

if (historyCountByDate.hasOwnProperty(dateKey)) {
  var historyCount = historyCountByDate[dateKey];
  gameScores.push(historyCount);
}
else {
  gameScores.push(0);
}

}

var maxScore = Math.max(...gameScores); // Calculate the maximum value from the dataset

var yAxisMax = Math.ceil(maxScore / 5) * 5; 


      // Create a bar chart for the game scores
      var gameCtx = document.getElementById("gameChart").getContext("2d");
      new Chart(gameCtx, {
        type: "line",
        data: {
          labels: gameLabels,
          datasets: [
            {
              label: "Answered Questions",
              data: gameScores,
              backgroundColor: "rgba(75, 192, 192, 0.2)",
              borderColor: "rgba(75, 192, 192, 1)",
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              max: yAxisMax,
              ticks: {
          stepSize: 1, // Set the desired step size for the y-axis
        },
            },
          },
        },
      });

      // Generate placeholder data for the skills chart
      var skillsLabels = [
        "Vocabulary",
        "Geography",
        "Culture",
        "Facts",
        "History",
      ];

      var percentageVocabulary = '<%- JSON.stringify(data.percentageVocabulary) %>';
      var percentageGeography = '<%- JSON.stringify(data.percentageGeography) %>';
      var percentageCulture = '<%- JSON.stringify(data.percentageCulture) %>';
      var percentageFacts = '<%- JSON.stringify(data.percentageFacts) %>';
      var percentageHistory = '<%- JSON.stringify(data.percentageHistory) %>';
      var skillsScores = [];
skillsScores.push(JSON.parse(percentageVocabulary));
skillsScores.push(JSON.parse(percentageGeography));
skillsScores.push(JSON.parse(percentageCulture));
skillsScores.push(JSON.parse(percentageFacts));
skillsScores.push(JSON.parse(percentageHistory));

      
// Create a radar chart for student skills
var skillsCtx = document.getElementById("skillsChart").getContext("2d");
new Chart(skillsCtx, {
  type: "radar",
  data: {
    labels: skillsLabels,
    datasets: [
      {
        label: "Other Students' Skills",
        data: skillsScores,
        backgroundColor: "rgb(255,170,102, 0.2)",
        borderColor: "orange",
        borderWidth: 1,
      },
    ],
  },
  options: {
    plugins: {
      tooltip: {
        callbacks: {
label: function (context) {
  var label = context.dataset.label || "";
  var value = context.dataset.data[context.dataIndex];

  if (label) {
    label += ": ";
  }
  label += value !== undefined ? value + "%" : "";

  return label;
},
        },
      },
    },
    scales: {
      r: {
        suggestedMin: 0,
        suggestedMax: 100,
        ticks: {
          callback: function (value) {
            return value + "%"; // Add percent sign to the ticks on the scale
          },
        },
      },
    },
  },
});


var percentageVocabularyInd = '<%- JSON.stringify(data.percentageVocabularyInd) %>';
      var percentageGeographyInd = '<%- JSON.stringify(data.percentageGeographyInd) %>';
      var percentageCultureInd = '<%- JSON.stringify(data.percentageCultureInd) %>';
      var percentageFactsInd = '<%- JSON.stringify(data.percentageFactsInd) %>';
      var percentageHistoryInd = '<%- JSON.stringify(data.percentageHistoryInd) %>';

            // Generate placeholder data for the skills chart
      var skillsLabels = [
        "Vocabulary",
        "Geography",
        "Culture",
        "Facts",
        "History",
      ];
      var skillsScoresInd = [];

      skillsScoresInd.push(JSON.parse(percentageVocabularyInd));
      skillsScoresInd.push(JSON.parse(percentageGeographyInd));
      skillsScoresInd.push(JSON.parse(percentageCultureInd));
      skillsScoresInd.push(JSON.parse(percentageFactsInd));
      skillsScoresInd.push(JSON.parse(percentageHistoryInd));
      

// Create a radar chart for student skills
var skillsCtxInd = document.getElementById("skillsChartIndividual").getContext("2d");
new Chart(skillsCtxInd, {
  type: "radar",
  data: {
    labels: skillsLabels,
    datasets: [
      {
        label: "Your Skills",
        data: skillsScoresInd,
        backgroundColor: "rgba(54, 162, 235, 0.2)",
        borderColor: "rgba(54, 162, 235, 1)",
        borderWidth: 1,
      },
    ],
  },
  options: {
    plugins: {
      tooltip: {
        callbacks: {

label: function (context) {
  var label = context.dataset.label || "";
  var value = context.dataset.data[context.dataIndex];
  if (label) {
    label += ": ";
  }
  label += value !== undefined ? value + "%" : "";
  return label;
},
        },
      },
    },
    scales: {
      r: {
        suggestedMin: 0,
        suggestedMax: 100,
        ticks: {
          callback: function (value) {
            return value + "%"; // Add percent sign to the ticks on the scale
          },
        },
      },
    },
  },
});

    
  var progressBar = document.getElementById("progress-bar");
  var image1 = document.getElementById("image1");
  var image2 = document.getElementById("image2");
  var image3 = document.getElementById("image3");
  var adventurer = document.getElementById("adventurer");
  var globetrotter = document.getElementById("globetrotter");
  var adventurer_unlocked = document.getElementById("adventurer_unlocked");
  var globetrotter_unlocked = document.getElementById("globetrotter_unlocked");
  var novice_unlocked = document.getElementById("novice_unlocked");
  var novice = document.getElementById("novice");

  // Function to update the opacity of images based on progress
  function updateImageOpacity() {

    var progress = parseInt(progressBar.style.width);
    console.log(progress);
  
    
    if (progress < 25) {
      image1.style.opacity = "0.3";
      image2.style.opacity = "0.3";
      image3.style.opacity = "0.3";

      novice.style.display='initial';
      adventurer.style.display='initial';
      globetrotter.style.display='initial';


      adventurer_unlocked.style.display='none';
      globetrotter_unlocked.style.display='none';
      novice_unlocked.style.display='none';
    }
    if (answeredPercentage >= 25) {
      image1.style.opacity = "1";
      image2.style.opacity = "1";
      image3.style.opacity = "0.3";

      novice.style.display='none';
      adventurer.style.display='initial';
      globetrotter.style.display='initial';

      novice_unlocked.style.display ='initial';
      adventurer_unlocked.style.display='none';
      globetrotter_unlocked.style.display='none';
    }
    if (progress >= 50) {
      image1.style.opacity = "1";
      image2.style.opacity = "1";
      image3.style.opacity = "0.3";

      novice.style.display='none';
      adventurer.style.display='none';
      globetrotter.style.display='initial';

      novice_unlocked.style.display ='initial';
      adventurer_unlocked.style.display='initial';
      globetrotter_unlocked.style.display='none';
    } if (progress >=100) {
      image1.style.opacity = "1";
      image2.style.opacity = "1";
      image3.style.opacity = "1";

      novice.style.display='none';
      adventurer.style.display='none';
      globetrotter.style.display='none';

      novice_unlocked.style.display ='initial';
      globetrotter_unlocked.style.display='initial';
      adventurer_unlocked.style.display='initial';
    }
  }

  // Call the function initially
  updateImageOpacity();

  // Call the function whenever the progress bar width changes
  progressBar.addEventListener("transitionend", updateImageOpacity);


   // Generate placeholder data for the skills chart
   var skillsLabels = [
        "Vocabulary",
        "Geography",
        "Culture",
        "Facts",
        "History",
      ];
      var skillsScores = [10, 15, 20, 6, 3];

      // Generate placeholder data for the user chart
      var userLabels = ["Correct", "Close", "False"];


var accuracy100 = '<%- JSON.stringify(data.accuracy100) %>';
var accuracy60 = '<%- JSON.stringify(data.accuracy60) %>';
var accuracy0 = '<%- JSON.stringify(data.accuracy0) %>';
var userScores = [];
userScores.push(JSON.parse(accuracy100));
userScores.push(JSON.parse(accuracy60));
userScores.push(JSON.parse(accuracy0));


     var userLabels = ["Correct", "Close", "False"];
  
/*
  userScores.push(2);
  userScores.push(3);
  userScores.push(4);
      /*
    userScores.forEach(score => { 
    userScores.push(score);
});*/


      // Create a pie chart for the user scores
      var userCtx = document.getElementById("userChart").getContext("2d");
      new Chart(userCtx, {
        type: "pie",
        data: {
          labels: userLabels,
          datasets: [
            {
              data: userScores,
              backgroundColor: [
                "#6ba428",
                "#fbd702",
                "#eb5e3e"
              ],
              hoverBackgroundColor: [
                "#4f7729",
                "#fbca00",
                "#c95136"
              ],
            },
          ],
        },
      });

      
  var answeredPercentage= '<%- JSON.stringify(data.answeredPercentage) %>';

  var progressIcon = document.getElementById("progress-icon");

  // Function to update the progress bar and icon based on the progress

  console.log(answeredPercentage);

  function updateProgressBar(progress) {
  answeredPercentage = Math.floor(progress * 100);
  progwidth = answeredPercentage.toFixed(0) + "%";
  progressBar.style.width = progwidth;
  progressIcon.style.marginLeft = progwidth;
}

    </script>
  </body>
</html>
